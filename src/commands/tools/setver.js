import fs from 'fs'

export default class SetverCommand {
  name = '—Å–µ—Ç–≤–µ—Ä'
  description = '–æ–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞'
  emoji = 'üÜô'
  right = 'setver'
  arguments = {
    ver: { name: '–≤–µ—Ä—Å–∏—è', type: 'string' }
  }

  async handler (ctx) {
    const wall = ctx.getAttachments('wall')[0];
    if (!wall) {
      return ctx.answer('–í—ã –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–∏–ª–∏ –∑–∞–ø–∏—Å—å –∫ —Å–æ–æ–±—â–µ–Ω–∏—é.');
    }

    if (!wall.text.includes('#–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ@bot_eva')) {
      return ctx.answer('–í –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç —Ö–µ—à—Ç–µ–≥–∞.')
    }

    const versions = await ctx.henta.util.loadSettings('updates.json');
    versions[ctx.params.ver] = wall.toString();

    const data = await ctx.henta.util.loadSettings('../package.json');
    const oldVersion = data.version;
    data.version = ctx.params.ver;

    fs.writeFileSync(`${ctx.henta.botdir}/package.json`, JSON.stringify(data, true));
    fs.writeFileSync(`${ctx.henta.botdir}/settings/updates.json`, JSON.stringify(versions, true));

    ctx.answer([
      `üÜô –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:`,
      `‚¨õ ${oldVersion} ¬ª ${data.version}.`
    ])
  }
}