import { Keyboard } from 'vk-io';
import fetch from 'node-fetch';
import querystring from 'querystring';
import moment from 'moment';

export default class ChatCommand {
  name = '–±–µ—Å–µ–¥–∞';
  description = '–≤ –∫–æ–Ω—Ñ—É';
  emoji = 'üéà';

  constructor() {
    moment.locale('ru');
  }

  async checkFriends(ctx) {
    await ctx.api.friends.add({
      access_token: ctx.henta.config.private.pageToken,
      user_id: ctx.user.vkId
    });

    const areFriends = await ctx.api.friends.areFriends({
      access_token: ctx.henta.config.private.pageToken,
      user_ids: ctx.user.vkId
    });

    return areFriends[0].friend_status === 3;
  }

  sendFriendsError(ctx) {
    return ctx.builder()
      .lines([
        'üéé –î–æ–±–∞–≤—å—Ç–µ @evarobot –≤ –¥—Ä—É–∑—å—è, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.',
        'üé´ –í—ã –±—É–¥–µ—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–µ—Å–µ–¥—É —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ü–æ–∑–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –µ—ë –∏–∑ –¥—Ä—É–∑–µ–π.'
      ])
      .keyboard(Keyboard.builder()
        .textButton({ label: 'üëÄ –ü—Ä–æ—Ñ–∏–ª—å', payload: { command: '–ø—Ä–æ—Ñ–∏–ª—å' } }))
      .answer();
  }

  async checkCmBan(henta, userId) {
    const result = await fetch(`https://api.chatmanager.pro?${querystring.stringify({
      method: 'chats.isMemberBanned',
      token: henta.config.private.cmToken,
      user_id: userId,
      chat_uid: 'cccAbd'
    })}`);

    const resultData = await result.json();
    return resultData.response.banned && resultData.response.time;
  }

  async handler(ctx) {
    try {
    if (!await this.checkFriends(ctx)) {
      return this.sendFriendsError(ctx);
    }
} catch(err) {
  return ctx.answer('–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è —Å—Å—ã–ª–∫–æ–π: https://vk.me/join/AAAAACNkOSYHHwx7BXja6x2c')
}

    ctx.answer('‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –±–∞–Ω–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è.');
    setTimeout(() => ctx.send('‚åõ –û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å.'), 30000);
    setTimeout(() => this.continueHandler(ctx), 60000);
  }

  async continueHandler(ctx) {
    const banned = await this.checkCmBan(ctx.henta, ctx.user.vkId);
    if (banned) {
      return ctx.send([
        '‚õî –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –±–∞–Ω–µ —á–∞—Ç–∞.',
        `‚è≥ –ò—Å—Ç–µ–∫–∞–µ—Ç ${moment.unix(banned).fromNow()}.`
      ]);
    }

    try {
      await ctx.api.messages.addChatUser({
        chat_id: 306,
        user_id: ctx.user.vkId,
        access_token: ctx.henta.config.private.pageToken
      });

      ctx.send([
        'üéé –Ø –¥–æ–±–∞–≤–∏–ª–∞ —Ç–µ–±—è –≤ —Å–≤–æ—é –±–µ—Å–µ–¥—É.',
        'üç≠ –ü—Ä–æ—á–∏—Ç–∞–π –ø—Ä–∞–≤–∏–ª–∞, —á—Ç–æ–±—ã —Ç–µ–±—è –Ω–µ –≤—ã–≥–Ω–∞–ª–∏:',
        'vk.com/@bot_eva-chat-rules'
      ]);
    } catch (e) {
      ctx.send('–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±–µ—Å–µ–¥–µ.');
    }
  }
}