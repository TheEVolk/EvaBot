export default class {
  constructor () {
    Object.assign(this, {
      name: '—Ä–∞—Å—Å—ã–ª–∫–∞',
      description: '—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É',
      emoji: 'üì£',

      subcommands: {
        —Å–º–µ–Ω–∏—Ç—å: {
          handler: this.changeHandler,
          arguments: { slug: { type: 'string' } }
        }
      }
    })
  }

  async handler (ctx) {
    const { categories } = ctx.getPlugin('common/allmail')
    const subscribes = await ctx.user.allmain.getSubscribes()

    const keyboard = ctx.keyboard()
    categories.forEach(v =>
      keyboard.textButton({
        label: `${v.emoji} ${v.title}`,
        color: subscribes.includes(v.slug) ? 'positive' : 'negative',
        payload: { botcmd: `—Ä–∞—Å—Å—ã–ª–∫–∞ —Å–º–µ–Ω–∏—Ç—å ${v.slug}` }
      }).row()
    )

    ctx.builder()
      .lines([
        '‚úâ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏:',
        ...categories.map(v =>
          `[${subscribes.includes(v.slug) ? '‚úî' : '‚ùå'}] ${v.title}'.`
        )
      ])
      .keyboard(keyboard)
      .answer()
  }

  async changeHandler (ctx) {
    const { categories } = ctx.getPlugin('common/allmail')
    const { briefNumber } = ctx.getPlugin('mybot/moneys')

    const category = ctx.assert(
      categories.find(v => v.slug === ctx.params.slug),
      'üìõ –¢–∞–∫–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.'
    )

    const isSubscribed = await ctx.user.allmain.is(category.slug)

    if (isSubscribed) {
      ctx.user.allmain.unsubscribe(category.slug)

      ctx.builder()
        .text(`üíî –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç <<${category.title}>>`)
        .textButton({ label: '–ù–∞–∑–∞–¥', payload: { botcmd: '—Ä–∞—Å—Å—ã–ª–∫–∞' } })
        .answer()
    } else {
      ctx.user.allmain.subscribe(category.slug)

      ctx.builder()
        .lines([
          `${category.emoji} –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ <<${category.title}>>`,
          `üí∏ –ó–∞ –∫–∞–∂–¥–æ–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å ${briefNumber(category.bonus)} –±–∏—Ç!`
        ])
        .textButton({ label: '–ù–∞–∑–∞–¥', payload: { botcmd: '—Ä–∞—Å—Å—ã–ª–∫–∞' } })
        .answer()
    }
  }
}
