import { Keyboard } from 'vk-io'

export default class {
  name = '–º–µ–Ω—é'
  description = '–Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –±–æ—Ç—É'
  emoji = 'üó∫'

  async handler (ctx) {
    // const pet = await ctx.user.getPet()

    // const clanEmoji = await ctx.user.hasClan() ? 'üõ°' : '‚≠ï'
    // const jobEmoji = await ctx.user.job ? 'üíº' : '‚≠ï'
    // const petEmoji = pet ? pet.getType().emoji : '‚≠ï'

    ctx.builder()
      .text('üó∫ –ü–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.')
      .keyboard(Keyboard.builder()
        .textButton({ label: `üëÄ –ü—Ä–æ—Ñ–∏–ª—å`, payload: { command: '–ø—Ä–æ—Ñ–∏–ª—å' } })
        .textButton({ label: `üèÖ –ê—á–∏–≤–∫–∏`, payload: { command: '–∞—á–∏–≤–∫–∏' } })
        .row()
        // .textButton({ label: `${petEmoji} –ü–∏—Ç–æ–º–µ—Ü`, payload: { command: '–ø–∏—Ç' } })
        // .textButton({ label: `${jobEmoji} –†–∞–±–æ—Ç–∞`, payload: { command: '—Ä–∞–±–æ—Ç–∞' } })
        // .row()
        // .textButton({ label: 'üèô –ì–æ—Ä–æ–¥', payload: { command: '–≥–æ—Ä–æ–¥' } })
      )
      .answer({ mainMenu: false })
  }
}
