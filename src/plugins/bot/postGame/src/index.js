import Sequelize from 'sequelize';
import Vk from 'vk-io';

export default class PostGamePlugin {
  constructor(henta) {
    this.henta = henta;
  }

  async init(henta) {
    const dbPlugin = henta.getPlugin('common/db');

    this.PostGameProcess = dbPlugin.define('postGameProcess', {
      wallId: Sequelize.INTEGER(),
      answered: Sequelize.TEXT(),
      rightAnswer: Sequelize.STRING(),
      createTime: Sequelize.INTEGER(),
      bonusData: Sequelize.TEXT()
    }, { timestamps: false });

    await dbPlugin.safeSync(this.PostGameProcess);

    // await this.PostGameProcess.sync({ force: true })

    henta.vk.updates.on('comment', this.processUserAnswer.bind(this));
  }

  async processUserAnswer(ctx, next) {
    if (ctx.userId < 0) {
      return next();
    }

    const gameProcess = await this.PostGameProcess.findOne({
      where: { wallId: ctx.objectId }
    });

    if (!gameProcess) {
      return next();
    }

    const usersPlugin = this.henta.getPlugin('common/users');
    const user = await usersPlugin.get(ctx.userId);
    if (!user) {
      this.henta.vk.api.wall.createComment({
        owner_id: -134466548,
        post_id: gameProcess.wallId,
        reply_to_comment: ctx.id,
        message: '‚ùî –ü–æ—Ö–æ–∂–µ —è –≤–∏–∂—É —Ç–µ–±—è –≤–ø–µ—Ä–≤—ã–µ –∏ –Ω–µ –º–æ–≥—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–≤–æ–π –æ—Ç–≤–µ—Ç –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ù–∞–ø–∏—à–∏ –º–Ω–µ –≤ –õ–°, –∞ –ø–æ—Å–ª–µ, –≤–µ—Ä–Ω–∏—Å—å —Å—é–¥–∞ –∏ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –æ—Ç–≤–µ—Ç —Å–Ω–æ–≤–∞.'
      });
      return next();
    }

    const answered = JSON.parse(gameProcess.answered);
    if (answered[user.vkId]) {
      return user.send('üéà –í—ã —É–∂–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ —ç—Ç–æ–π –∏–≥—Ä–µ.');
    }

    if (ctx.text.toLowerCase().replace('—ë', '–µ') === gameProcess.rightAnswer) {
      // const { diffLine } = this.henta.getPlugin('systems/moneys');

      const bonus = JSON.parse(gameProcess.bonusData);
      if (bonus.type === 'bits') {
        user.money += bonus.count;
      }

      if (bonus.type === 'case') {
        const casesPlugin = this.henta.getPlugin('bot/cases');
        casesPlugin.Case.create({
          vkId: user.vkId,
          slug: bonus.slug
        });
      }

      user.lvl.addScore(100);
      user.save();

      user.send([
        '‚úî –¢—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª –≤ –∏–≥—Ä–µ –∏ –ø–æ–ª—É—á–∏–ª –ø—Ä–∏–∑!'
      // diffLine(user, gameProcess.bonus)
      ]);

      answered[user.vkId] = 'W';
    } else {
      user.send([
        '‚ùå –£–≤—ã, –Ω–æ —Ç—ã –æ—à–∏–±—Å—è —Å –æ—Ç–≤–µ—Ç–æ–º.',
        'üí¢ –í —ç—Ç–æ–π –∏–≥—Ä–µ –±–æ–ª—å—à–µ –Ω–µ–ª—å–∑—è –æ—Ç–≤–µ—á–∞—Ç—å.'
      ]);

      answered[user.vkId] = 'L';
    }

    if (Object.entries(answered).filter(v => v[1] === 'W').length >= 100) {
      this.destroyGame(gameProcess);
    } else {
      gameProcess.answered = JSON.stringify(answered);
      gameProcess.save();
    }

    await next();
  }

  destroyGame(gameProcess) {
    this.henta.vk.api.wall.createComment({
      owner_id: -134466548,
      post_id: gameProcess.wallId,
      message: 'üî∑ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'
    });
  }

  async createGame(GameClass, bonusType, custom) {
    const currentGame = new GameClass();
    await currentGame.init();

    const uploader = new Vk({
      token: this.henta.config.private.pageToken
    });

    const photo = await uploader.upload.wallPhoto({
      source: await currentGame.generateImage()
    });

    let text = '';
    const bonusData = { type: bonusType };
    if (bonusType === 'bits') {
      bonusData.count = 10000 + Math.floor(Math.random() * 1e6);
      text = `üí∞ –ù–∞–ø–∏—à–∏ –æ—Ç–≤–µ—Ç –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø–æ–ª—É—á–∏ ${bonusData.count.toLocaleString()} –±–∏—Ç!`;
    }

    if (bonusType === 'case') {
      const casesPlugin = this.henta.getPlugin('bot/cases');
      bonusData.slug = custom;
      text = `üì¶ –ù–∞–ø–∏—à–∏ –æ—Ç–≤–µ—Ç –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø–æ–ª—É—á–∏ ${casesPlugin.fromSlug[custom].title}!`;
    }

    const wallId = await uploader.api.wall.post({
      owner_id: -134466548,
      message: `${text}\n${currentGame.tip || ''}\n#game@bot_eva`,
      attachment: photo.toString()
    });

    this.henta.vk.api.wall.createComment({
      owner_id: -134466548,
      post_id: wallId.post_id,
      message: '* –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ. –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤ –õ–° –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.'
    });

    this.PostGameProcess.create({
      wallId: wallId.post_id,
      answered: '{}',
      rightAnswer: currentGame.rightAnswer,
      createTime: Math.floor(Date.now() / 1000),
      bonusData: JSON.stringify(bonusData)
    });

    // Debug
  /* const usersPlugin = this.henta.getPlugin('common/users')
    const user = await usersPlugin.get(169494689)
    user.sendBuilder()
      .text(`–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${currentGame.rightAnswer}`)
      .photo(await currentGame.generateImage())
      .send() */
  }

  async debugGame(GameClass) {
    const currentGame = new GameClass();
    const usersPlugin = this.henta.getPlugin('common/users');
    const user = await usersPlugin.get(169494689);
    user.sendBuilder()
      .text(`–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${currentGame.rightAnswer}`)
      .photo(await currentGame.generateImage())
      .send();
  }
}
